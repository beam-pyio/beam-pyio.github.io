<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Jaehyeon Kim on</title><link>/authors/jaehyeonkim/</link><description>Recent content in Jaehyeon Kim on</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright/><atom:link href="/authors/jaehyeonkim/index.xml" rel="self" type="application/rss+xml"/><item><title>SQS PyIO Connector 0.1.0</title><link>/blog/2024/sqs-pyio-0.1.0/</link><pubDate>Tue, 20 Aug 2024 00:00:00 +0000</pubDate><guid>/blog/2024/sqs-pyio-0.1.0/</guid><description><![CDATA[<p>We are happy to present the first release of the <a href="https://github.com/beam-pyio/sqs_pyio" target="_blank" rel="noopener noreferrer">Apache Beam Python I/O connector for Amazon SQS<i class="fas fa-external-link-square-alt ms-1"></i></a>.</p>
<p>✨NEW</p>
<ul>
<li>Add a composite transform (<code>WriteToSqs</code>) that sends messages to a SQS queue in batch, using the <a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sqs/client/send_message_batch.html" target="_blank" rel="noopener noreferrer"><code>send_message_batch</code><i class="fas fa-external-link-square-alt ms-1"></i></a> method of the boto3 package.</li>
</ul>]]></description></item><item><title>Introduction to SQS PyIO Connector</title><link>/blog/2024/sqs-pyio-intro/</link><pubDate>Mon, 19 Aug 2024 00:00:00 +0000</pubDate><guid>/blog/2024/sqs-pyio-intro/</guid><description><![CDATA[<p><a href="https://aws.amazon.com/sqs/" target="_blank" rel="noopener noreferrer">Amazon Simple Queue Service (Amazon SQS)<i class="fas fa-external-link-square-alt ms-1"></i></a> offers a secure, durable, and available hosted queue that lets you integrate and decouple distributed software systems and components. The Apache Beam Python I/O connector for Amazon SQS (<code>sqs_pyio</code>) aims to integrate with the queue service by supporting a source and sink connectors. Currently, a sink connector is available.</p>]]></description></item><item><title>Firehose PyIO Connector 0.1.0</title><link>/blog/2024/firehose-pyio-0.1.0/</link><pubDate>Fri, 19 Jul 2024 00:00:00 +0000</pubDate><guid>/blog/2024/firehose-pyio-0.1.0/</guid><description><![CDATA[<p>We are happy to present the first release of the <a href="https://github.com/beam-pyio/firehose_pyio" target="_blank" rel="noopener noreferrer">Apache Beam Python I/O connector for Amazon Data Firehose<i class="fas fa-external-link-square-alt ms-1"></i></a>.</p>
<p>✨NEW</p>
<ul>
<li>Add a composite transform (<code>WriteToFirehose</code>) that puts records into a Firehose delivery stream in batch, using the <a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/firehose/client/put_record_batch.html" target="_blank" rel="noopener noreferrer"><code>put_record_batch</code><i class="fas fa-external-link-square-alt ms-1"></i></a> method of the boto3 package.</li>
</ul>]]></description></item><item><title>Introduction to Firehose PyIO Connector</title><link>/blog/2024/firehose-pyio-intro/</link><pubDate>Thu, 18 Jul 2024 00:00:00 +0000</pubDate><guid>/blog/2024/firehose-pyio-intro/</guid><description><![CDATA[<p><a href="https://aws.amazon.com/firehose/" target="_blank" rel="noopener noreferrer">Amazon Data Firehose<i class="fas fa-external-link-square-alt ms-1"></i></a> is a fully managed service for delivering real-time streaming data to destinations such as Amazon Simple Storage Service (Amazon S3), Amazon Redshift, Amazon OpenSearch Service and Amazon OpenSearch Serverless. The Apache Beam Python I/O connector for Amazon Data Firehose (<code>firehose_pyio</code>) provides a data sink feature that facilitates integration with those services.</p>]]></description></item><item><title>Apache Beam Python I/O Connectors</title><link>/blog/2024/beam-pyio-intro/</link><pubDate>Thu, 04 Jul 2024 00:00:00 +0000</pubDate><guid>/blog/2024/beam-pyio-intro/</guid><description><![CDATA[<p><a href="https://beam.apache.org/" target="_blank" rel="noopener noreferrer">Apache Beam<i class="fas fa-external-link-square-alt ms-1"></i></a> is an open source unified programming model to define and execute data processing pipelines, including ETL, batch and stream processing. We consider it has a huge potential to improve traditional development patterns in both transactional and analytical processing of data. Specifically it can be applied to event-driven applications, data pipelines and streaming analytics.</p>
<p>Employing <a href="https://en.wikipedia.org/wiki/Dataflow_programming" target="_blank" rel="noopener noreferrer">dataflow programming<i class="fas fa-external-link-square-alt ms-1"></i></a>, Beam supports a range of <a href="https://beam.apache.org/documentation/io/connectors/" target="_blank" rel="noopener noreferrer">I/O connectors<i class="fas fa-external-link-square-alt ms-1"></i></a>, but we find some gaps in the existing connectors especially in relation to the Python SDK. It fueled us to start the <a href="https://github.com/beam-pyio" target="_blank" rel="noopener noreferrer">Apache Beam Python I/O Connectors<i class="fas fa-external-link-square-alt ms-1"></i></a> project.</p>]]></description></item></channel></rss>